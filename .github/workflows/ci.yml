name: Continuous Integration
on:
  push:
    branches:
      - main
      - feature/*
      - release/*
    paths-ignore:
      - '**.md'

env:
  STRIPE_KEY: ${{ secrets.STRIPE_KEY }}
  STRIPE_FREE_PRICE_ID: ${{ secrets.STRIPE_FREE_PRICE_ID }}
  STRIPE_BASIC_PRICE_ID: ${{ secrets.STRIPE_BASIC_PRICE_ID }}
  STRIPE_PREMIUM_PRICE_ID: ${{ secrets.STRIPE_PREMIUM_PRICE_ID }}
  STRIPE_BASIC_TRIAL_PRICE_ID: ${{ secrets.STRIPE_BASIC_TRIAL_PRICE_ID }}
  STRIPE_WEBHOOK_SECRET: ${{ secrets.STRIPE_WEBHOOK_SECRET }}

  HASURA_GRAPHQL_ADMIN_SECRET: "mysecrethasura"
  POSTGRES_PASSWORD: "postgrespassword"
  REGISTRY: ghcr.io

jobs:
  unit_test:
    name: Unit Tests
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-go@v2
      with:
        go-version: '^1.16.5'
    
    - name: Check go version
      run: go version

    - name: Execute unit tests
      run: ./scripts/test-unit.sh

  static_analysis:
    name: Static Analysis
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - uses: actions/setup-go@v2
      with:
        go-version: '^1.16.5'

    - name: Execute static check
      run: ./scripts/static-check.sh

  test_hasura:
    name: Test hasura data creation
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    
    - name: Starting up docker image
      run: docker-compose up -d

    - name: Checking docker logs
      run: docker-compose logs
    
    - name: Downloading Hasura CLI
      run: curl -L https://github.com/hasura/graphql-engine/raw/stable/cli/get.sh | bash
    
    - name: Executing tests
      run: ./scripts/hasura/test.sh

  create_hasura_artifacts:
    name: Creating hasura artifacts
    needs: ["test_saas"]
    runs-on: ubuntu-latest
    steps: 
    - uses: actions/checkout@v2

    - name: Migration Artifact
      uses: actions/upload-artifact@v2
      with:
        name: migrtations-latest
        path: |
          ./hasura/migrations

    - name: Metadata Artifact
      uses: actions/upload-artifact@v2
      with:
        name: metadata-latest
        path: |
          ./hasura/metadata

  e2e:
    name: End 2 End Tests
    needs: [unit_test, static_analysis]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - uses: actions/setup-go@v2
      with:
        go-version: '^1.16.5'
    
    - name: Execute e2e tests
      run: ./scripts/test-e2e.sh
  
  docker:
    name: Create docker image and publish
    needs: [e2e]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Build docker images
      run: ./scripts/docker-build.sh $GITHUB_SHA

    - name: Push docker images
      run: ./scripts/docker-push.sh $GITHUB_SHA ${GITHUB_REF#refs/heads/}